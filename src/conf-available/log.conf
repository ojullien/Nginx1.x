## -----------------------------------------------------
## NGINX 1.x
## Overrides logging configuration.
##
## @context http
## @module ngx_http_core_module, ngx_http_log_module,
##         ngx_http_realip_module, ngx_http_map_module
## -----------------------------------------------------

# User language map
map $http_accept_language $lang {
    default en;
    ~fr fr;
    # ...
}

# Disables logging of errors about not found files into error_log.
log_not_found off;

# Enables conditional logging.
# Use: access_log /var/log/nginx/access.log combined if=$loggable;
map $uri $loggable {
    ~*robots\.txt$ 0;
    ~*favicon\.ico$ 0;
    default 1;
}

#
# Specifies log format.
#
# The configuration always includes the predefined “combined” format:
#
#log_format combined '$remote_addr - $remote_user [$time_local] '
#                    '"$request" $status $body_bytes_sent '
#                    '"$http_referer" "$http_user_agent"';
#
log_format x_combined '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $bytes_sent '
                      '"$http_referer" "$http_user_agent"';

# Log format for a backend server behind a reverse proxy. Use ngx_http_realip_module
log_format backend_combined '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            '$request_time $http_x_proxy_unique_id} '
                            '"$http_x_forwarded_for" "$http_x_forwarded_host" "$http_x_forwarded_proto"';

# Log format for a reverse proxy
log_format proxy_combined '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '$request_time $request_id';

#
# The log format can contain common variables, and variables that exist only at the time of a log write:
# $body_bytes_sent     number of bytes sent to a client, not counting the response header;
# $bytes_sent          number of bytes sent to a client
# $connection          connection serial number
# $connection_requests the current number of requests made through a connection (1.1.18)
# $msec                time in seconds with a milliseconds resolution at the time of the log write
# $pipe                 “p” if request was pipelined, “.” otherwise
# $request_length       request length (including request line, header, and request body)
# $request_time         request processing time in seconds with a milliseconds resolution;
#                       time elapsed between the first bytes were read from the client
#                       and the log write after the last bytes were sent to the client
# $status               response status
# $time_iso8601         local time in the ISO 8601 standard format
# $time_local           local time in the Common Log Format
#
