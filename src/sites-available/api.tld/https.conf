## -----------------------------------------------------
## NGINX 1.x
## Name-based server block SSL configuration
## for static website and api.
##
## @url https://api.tld     => static site
## @url https://api.tld/v1  => api 1
## @url https://api.tld/v2  => api 2
##
## RENAME all api.tld occurences in files, filenames and
##        directory names with your domain name.
##
## @Context http
## @module ngx_http_core_module, ngx_http_ssl_module
##         ngx_http_v2_module
## -----------------------------------------------------

# Load the CSP map.
include sites-available/api.tld/include/csp.conf;

server {

    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    # SSL
    include sites-available/api.tld/include/ssl.conf;

    # Log
    include sites-available/api.tld/include/log.conf;

    # Server name configuration
    include sites-available/api.tld/include/vhost.conf;

    # Restrict files & directories access
    include sites-available/snippets/security/access_restriction.conf;

    # Content Security Policy (CSP)
    add_header Content-Security-Policy $api_csp_header always;

    # Cache headers (see conf.d/expires.conf)
    add_header Cache-Control $expires_cdn;
    etag off;

    # Usual headers
    include sites-available/snippets/headers/headers_for_application.conf;

    # Method control
    include sites-available/snippets/access_control/directives_for_application.conf;

    # App 001 configuration: static website on root
    include sites-available/api.tld/include/app01/app01.conf;

    # App 002 configuration: PHP site on apps/v2.0
    include sites-available/api.tld/include/app02/app02.conf;

}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    server_name api.tld;
    include sites-available/api.tld/include/ssl.conf;
    return 301 $scheme://www.api.tld$request_uri;
}

# If you DO use HSTS:
# you must redirect http://domain.tld to https://domain.tld first, before adding the www subdomain.
# https://domain.tld to https://www.domain.tld
# The extra redirect is required to ensure that any browser which supports HSTS will record the HSTS entry for the top
# level domain, not just the subdomain.
server {
    listen [::]:80;
    listen 80;
    server_name www.api.tld;
    return 301 https://www.api.tld$request_uri;
}

server {
    listen [::]:80;
    listen 80;
    server_name api.tld;
    return 301 https://api.tld$request_uri;
}

# If you DO NOT use HSTS:
# you can immediately redirect http://domain.tld to https://www.domain.tld
# Comment all lines above and uncomment all lines below.
#server {
#    listen [::]:80;
#    listen 80;
#    server_name api.tld www.api.tld
#    return 301 https://www.api.tld$request_uri;
#}
