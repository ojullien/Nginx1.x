## -----------------------------------------------------
## NGINX 1.x
## Reverse proxy SSL configuration for a name-based vhost.
##
## @context virtual host
## @module ssl_module proxy_module proxy_http2_module
## @author Olivier Jullien <https://github.com/ojullien>
## -----------------------------------------------------

Define USER_DOMAIN_NAME reverseproxy.tld
Define USER_SITE_DIR ${USER_DOMAIN_NAME}

<VirtualHost *:443>

    # System environment variables
    Include sites-available/shared/system-env.conf

    # Log
    Include sites-available/${USER_SITE_DIR}/include/log.conf

    # SSL
    Include sites-available/${USER_SITE_DIR}_rp/include/ssl.conf

    # Server name configuration
    Include sites-available/${USER_SITE_DIR}/include/vhost.conf

    # Forwarding information to backend systems
    RequestHeader set "X-PROXY-UNIQUE-ID" "%{UNIQUE_ID}e"
    RequestHeader set "X-PROXY-REMOTE-USER" "%{REMOTE_USER}e"
    RequestHeader set "X-PROXY-SSL-PROTOCOL" "%{SSL_PROTOCOL}s"
    RequestHeader set "X-PROXY-SSL-CIPHER" "%{SSL_CIPHER}s"
    RequestHeader set "X-Forwarded-Proto" "https"

    # You may activate some access control
    #Include sites-available/shared/access_control/directives_for_static_website.conf
    # Or
    #Include sites-available/shared/access_control/directives_for_application.conf

    # You may activate more security rules
    #Include sites-available/shared/security/enhancement.conf

    # The backend server needs to support HTTP/2 !
    ProxyPass "/" "h2://<remote [ip address | domain name]>/" keepalive=On retry=5
    ProxyPassReverse "/" "https://<remote [ip address | domain name]>/"

</VirtualHost>

<VirtualHost *:80>
    ServerName ${USER_DOMAIN_NAME}
    ServerAlias www.${USER_DOMAIN_NAME}
    RedirectPermanent "/" "https://www.${USER_DOMAIN_NAME}/"
</VirtualHost>

UnDefine USER_SITE_DIR
UnDefine USER_DOMAIN_NAME

But NGINX does not have ProxyPassReverse... The solution is adding a few missing HTTP headers.
https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_redirect
server {
    listen myhost:80;
    server_name  myhost;
    location / {
        root /path/to/myapp/public;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://myapp:8080;
    }
}
proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

         proxy_http_version 1.1;

          proxy_set_header Host               $host;
          proxy_set_header X-Real-IP          $remote_addr;
          proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto  $scheme;